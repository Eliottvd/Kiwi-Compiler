//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:\Eliott\Ecole\WK_Compiler\Kiwi-Compiler\Compilateur\DEMO.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Compilateur {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class DEMOLexer : Lexer {
	public const int
		PRINT=1, LPAR=2, RPAR=3, COMMA=4, PLUS=5, MINUS=6, BEGIN=7, END=8, TRUE=9, 
		FALSE=10, NOP=11, NOT=12, INC=13, DEC=14, EQUAL=15, BYTE=16, WORD=17, 
		STRING=18, STRING_LITERAL=19, CONST=20, NUMBER=21, ID=22, HEXA8=23, HEXA16=24, 
		BINARY8=25, BINARY16=26, COMMENT=27, NEWLINE=28, WS=29;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"PRINT", "LPAR", "RPAR", "COMMA", "PLUS", "MINUS", "BEGIN", "END", "TRUE", 
		"FALSE", "NOP", "NOT", "INC", "DEC", "EQUAL", "BYTE", "WORD", "STRING", 
		"STRING_LITERAL", "CONST", "NUMBER", "ID", "HEXA8", "HEXA16", "BINARY8", 
		"BINARY16", "LETTER", "DIGIT", "BIT", "HEXA", "COMMENT", "NEWLINE", "WS"
	};


	public DEMOLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'print'", "'('", "')'", "','", "'+'", "'-'", "'Begin'", "'End'", 
		"'TRUE'", "'FALSE'", "'NOP'", "'!'", "'++'", "'--'", "'='", "'byte'", 
		"'word'", "'string'", null, "'const'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "PRINT", "LPAR", "RPAR", "COMMA", "PLUS", "MINUS", "BEGIN", "END", 
		"TRUE", "FALSE", "NOP", "NOT", "INC", "DEC", "EQUAL", "BYTE", "WORD", 
		"STRING", "STRING_LITERAL", "CONST", "NUMBER", "ID", "HEXA8", "HEXA16", 
		"BINARY8", "BINARY16", "COMMENT", "NEWLINE", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "DEMO.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x1F\xF8\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 "+
		"\t \x4!\t!\x4\"\t\"\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3"+
		"\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3"+
		"\b\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v\x3"+
		"\v\x3\v\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3"+
		"\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3\x11\x3\x11\x3\x11\x3\x12\x3\x12\x3"+
		"\x12\x3\x12\x3\x12\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3"+
		"\x14\x3\x14\a\x14\x8C\n\x14\f\x14\xE\x14\x8F\v\x14\x3\x14\x3\x14\x3\x15"+
		"\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x16\x6\x16\x9A\n\x16\r\x16\xE\x16"+
		"\x9B\x3\x17\x3\x17\x3\x17\a\x17\xA1\n\x17\f\x17\xE\x17\xA4\v\x17\x3\x18"+
		"\x3\x18\x3\x18\x3\x18\x3\x18\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19"+
		"\x3\x19\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A"+
		"\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B"+
		"\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B"+
		"\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1C"+
		"\x5\x1C\xD9\n\x1C\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1F\x5\x1F\xE0\n\x1F"+
		"\x3 \x3 \a \xE4\n \f \xE \xE7\v \x3 \x3 \x3!\x5!\xEC\n!\x3!\x3!\x3!\x3"+
		"!\x3\"\x6\"\xF3\n\"\r\"\xE\"\xF4\x3\"\x3\"\x3\x8D\x2\x2#\x3\x2\x3\x5\x2"+
		"\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17"+
		"\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14"+
		"\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2"+
		"\x1C\x37\x2\x2\x39\x2\x2;\x2\x2=\x2\x2?\x2\x1D\x41\x2\x1E\x43\x2\x1F\x3"+
		"\x2\t\x3\x2\x32\x32\x4\x2\x43\\\x63|\x3\x2\x32;\x3\x2\x32\x33\x5\x2\x32"+
		";\x43H\x63h\x4\x2\f\f\xF\xF\x4\x2\v\v\"\"\xFA\x2\x3\x3\x2\x2\x2\x2\x5"+
		"\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3"+
		"\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15"+
		"\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2"+
		"\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2"+
		"\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-"+
		"\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2"+
		"\x35\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2"+
		"\x3\x45\x3\x2\x2\x2\x5K\x3\x2\x2\x2\aM\x3\x2\x2\x2\tO\x3\x2\x2\x2\vQ\x3"+
		"\x2\x2\x2\rS\x3\x2\x2\x2\xFU\x3\x2\x2\x2\x11[\x3\x2\x2\x2\x13_\x3\x2\x2"+
		"\x2\x15\x64\x3\x2\x2\x2\x17j\x3\x2\x2\x2\x19n\x3\x2\x2\x2\x1Bp\x3\x2\x2"+
		"\x2\x1Ds\x3\x2\x2\x2\x1Fv\x3\x2\x2\x2!x\x3\x2\x2\x2#}\x3\x2\x2\x2%\x82"+
		"\x3\x2\x2\x2\'\x89\x3\x2\x2\x2)\x92\x3\x2\x2\x2+\x99\x3\x2\x2\x2-\x9D"+
		"\x3\x2\x2\x2/\xA5\x3\x2\x2\x2\x31\xAA\x3\x2\x2\x2\x33\xB1\x3\x2\x2\x2"+
		"\x35\xBC\x3\x2\x2\x2\x37\xD8\x3\x2\x2\x2\x39\xDA\x3\x2\x2\x2;\xDC\x3\x2"+
		"\x2\x2=\xDF\x3\x2\x2\x2?\xE1\x3\x2\x2\x2\x41\xEB\x3\x2\x2\x2\x43\xF2\x3"+
		"\x2\x2\x2\x45\x46\ar\x2\x2\x46G\at\x2\x2GH\ak\x2\x2HI\ap\x2\x2IJ\av\x2"+
		"\x2J\x4\x3\x2\x2\x2KL\a*\x2\x2L\x6\x3\x2\x2\x2MN\a+\x2\x2N\b\x3\x2\x2"+
		"\x2OP\a.\x2\x2P\n\x3\x2\x2\x2QR\a-\x2\x2R\f\x3\x2\x2\x2ST\a/\x2\x2T\xE"+
		"\x3\x2\x2\x2UV\a\x44\x2\x2VW\ag\x2\x2WX\ai\x2\x2XY\ak\x2\x2YZ\ap\x2\x2"+
		"Z\x10\x3\x2\x2\x2[\\\aG\x2\x2\\]\ap\x2\x2]^\a\x66\x2\x2^\x12\x3\x2\x2"+
		"\x2_`\aV\x2\x2`\x61\aT\x2\x2\x61\x62\aW\x2\x2\x62\x63\aG\x2\x2\x63\x14"+
		"\x3\x2\x2\x2\x64\x65\aH\x2\x2\x65\x66\a\x43\x2\x2\x66g\aN\x2\x2gh\aU\x2"+
		"\x2hi\aG\x2\x2i\x16\x3\x2\x2\x2jk\aP\x2\x2kl\aQ\x2\x2lm\aR\x2\x2m\x18"+
		"\x3\x2\x2\x2no\a#\x2\x2o\x1A\x3\x2\x2\x2pq\a-\x2\x2qr\a-\x2\x2r\x1C\x3"+
		"\x2\x2\x2st\a/\x2\x2tu\a/\x2\x2u\x1E\x3\x2\x2\x2vw\a?\x2\x2w \x3\x2\x2"+
		"\x2xy\a\x64\x2\x2yz\a{\x2\x2z{\av\x2\x2{|\ag\x2\x2|\"\x3\x2\x2\x2}~\a"+
		"y\x2\x2~\x7F\aq\x2\x2\x7F\x80\at\x2\x2\x80\x81\a\x66\x2\x2\x81$\x3\x2"+
		"\x2\x2\x82\x83\au\x2\x2\x83\x84\av\x2\x2\x84\x85\at\x2\x2\x85\x86\ak\x2"+
		"\x2\x86\x87\ap\x2\x2\x87\x88\ai\x2\x2\x88&\x3\x2\x2\x2\x89\x8D\a$\x2\x2"+
		"\x8A\x8C\v\x2\x2\x2\x8B\x8A\x3\x2\x2\x2\x8C\x8F\x3\x2\x2\x2\x8D\x8E\x3"+
		"\x2\x2\x2\x8D\x8B\x3\x2\x2\x2\x8E\x90\x3\x2\x2\x2\x8F\x8D\x3\x2\x2\x2"+
		"\x90\x91\a$\x2\x2\x91(\x3\x2\x2\x2\x92\x93\a\x65\x2\x2\x93\x94\aq\x2\x2"+
		"\x94\x95\ap\x2\x2\x95\x96\au\x2\x2\x96\x97\av\x2\x2\x97*\x3\x2\x2\x2\x98"+
		"\x9A\x5\x39\x1D\x2\x99\x98\x3\x2\x2\x2\x9A\x9B\x3\x2\x2\x2\x9B\x99\x3"+
		"\x2\x2\x2\x9B\x9C\x3\x2\x2\x2\x9C,\x3\x2\x2\x2\x9D\xA2\x5\x37\x1C\x2\x9E"+
		"\xA1\x5\x37\x1C\x2\x9F\xA1\x5\x39\x1D\x2\xA0\x9E\x3\x2\x2\x2\xA0\x9F\x3"+
		"\x2\x2\x2\xA1\xA4\x3\x2\x2\x2\xA2\xA0\x3\x2\x2\x2\xA2\xA3\x3\x2\x2\x2"+
		"\xA3.\x3\x2\x2\x2\xA4\xA2\x3\x2\x2\x2\xA5\xA6\t\x2\x2\x2\xA6\xA7\az\x2"+
		"\x2\xA7\xA8\x5=\x1F\x2\xA8\xA9\x5=\x1F\x2\xA9\x30\x3\x2\x2\x2\xAA\xAB"+
		"\t\x2\x2\x2\xAB\xAC\az\x2\x2\xAC\xAD\x5=\x1F\x2\xAD\xAE\x5=\x1F\x2\xAE"+
		"\xAF\x5=\x1F\x2\xAF\xB0\x5=\x1F\x2\xB0\x32\x3\x2\x2\x2\xB1\xB2\t\x2\x2"+
		"\x2\xB2\xB3\a\x64\x2\x2\xB3\xB4\x5;\x1E\x2\xB4\xB5\x5;\x1E\x2\xB5\xB6"+
		"\x5;\x1E\x2\xB6\xB7\x5;\x1E\x2\xB7\xB8\x5;\x1E\x2\xB8\xB9\x5;\x1E\x2\xB9"+
		"\xBA\x5;\x1E\x2\xBA\xBB\x5;\x1E\x2\xBB\x34\x3\x2\x2\x2\xBC\xBD\t\x2\x2"+
		"\x2\xBD\xBE\a\x64\x2\x2\xBE\xBF\x5;\x1E\x2\xBF\xC0\x5;\x1E\x2\xC0\xC1"+
		"\x5;\x1E\x2\xC1\xC2\x5;\x1E\x2\xC2\xC3\x5;\x1E\x2\xC3\xC4\x5;\x1E\x2\xC4"+
		"\xC5\x5;\x1E\x2\xC5\xC6\x5;\x1E\x2\xC6\xC7\x5;\x1E\x2\xC7\xC8\x5;\x1E"+
		"\x2\xC8\xC9\x5;\x1E\x2\xC9\xCA\x5;\x1E\x2\xCA\xCB\x5;\x1E\x2\xCB\xCC\x5"+
		";\x1E\x2\xCC\xCD\x5;\x1E\x2\xCD\xCE\x5;\x1E\x2\xCE\xCF\x5;\x1E\x2\xCF"+
		"\xD0\x5;\x1E\x2\xD0\xD1\x5;\x1E\x2\xD1\xD2\x5;\x1E\x2\xD2\xD3\x5;\x1E"+
		"\x2\xD3\xD4\x5;\x1E\x2\xD4\xD5\x5;\x1E\x2\xD5\xD6\x5;\x1E\x2\xD6\x36\x3"+
		"\x2\x2\x2\xD7\xD9\t\x3\x2\x2\xD8\xD7\x3\x2\x2\x2\xD9\x38\x3\x2\x2\x2\xDA"+
		"\xDB\t\x4\x2\x2\xDB:\x3\x2\x2\x2\xDC\xDD\t\x5\x2\x2\xDD<\x3\x2\x2\x2\xDE"+
		"\xE0\t\x6\x2\x2\xDF\xDE\x3\x2\x2\x2\xE0>\x3\x2\x2\x2\xE1\xE5\a%\x2\x2"+
		"\xE2\xE4\n\a\x2\x2\xE3\xE2\x3\x2\x2\x2\xE4\xE7\x3\x2\x2\x2\xE5\xE3\x3"+
		"\x2\x2\x2\xE5\xE6\x3\x2\x2\x2\xE6\xE8\x3\x2\x2\x2\xE7\xE5\x3\x2\x2\x2"+
		"\xE8\xE9\b \x2\x2\xE9@\x3\x2\x2\x2\xEA\xEC\a\xF\x2\x2\xEB\xEA\x3\x2\x2"+
		"\x2\xEB\xEC\x3\x2\x2\x2\xEC\xED\x3\x2\x2\x2\xED\xEE\a\f\x2\x2\xEE\xEF"+
		"\x3\x2\x2\x2\xEF\xF0\b!\x2\x2\xF0\x42\x3\x2\x2\x2\xF1\xF3\t\b\x2\x2\xF2"+
		"\xF1\x3\x2\x2\x2\xF3\xF4\x3\x2\x2\x2\xF4\xF2\x3\x2\x2\x2\xF4\xF5\x3\x2"+
		"\x2\x2\xF5\xF6\x3\x2\x2\x2\xF6\xF7\b\"\x2\x2\xF7\x44\x3\x2\x2\x2\f\x2"+
		"\x8D\x9B\xA0\xA2\xD8\xDF\xE5\xEB\xF4\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Compilateur
